% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/drug_enzyme_node_parser.R
\name{enzymes}
\alias{enzymes}
\title{Extracts the drug enzymes element and return data as tibble.}
\usage{
enzymes(
  save_table = FALSE,
  save_csv = FALSE,
  csv_path = ".",
  override_csv = FALSE,
  database_connection = NULL
)
}
\arguments{
\item{save_table}{boolean, save table in database if true.}

\item{save_csv}{boolean, save csv version of parsed tibble if true}

\item{csv_path}{location to save csv files into it, default is current
location, save_csv must be true}

\item{override_csv}{override existing csv, if any, in case it is true in the
new parse operation}

\item{database_connection}{DBI connection object that holds a connection to
user defined database. If \code{save_table} is enabled without providing
value for this function an error will be thrown.}
}
\value{
drug enzymes node attributes date frame
}
\description{
\code{enzymes} returns tibble of drug enzymes elements.
}
\details{
This functions extracts the enzymes element of drug node in \strong{DrugBank}
xml database with the option to save it in a predefined database via
passed database connection. It takes two optional arguments to
save the returned tibble in the database \code{save_table} and
 \code{database_connection}.
It must be called after \code{\link{read_drugbank_xml_db}} function like
any other parser function.
If \code{\link{read_drugbank_xml_db}} is called before for any reason, so
no need to call it again before calling this function.
}
\examples{
\dontrun{
# return only the parsed tibble
enzymes()

# will throw an error, as database_connection is NULL
enzymes(save_table = TRUE)

# save in database in SQLite in memory database and return parsed tibble
sqlite_con <- DBI::dbConnect(RSQLite::SQLite())
enzymes(save_table = TRUE, database_connection = sqlite_con)

# save parsed tibble as csv if it does not exist in current
# location and return parsed tibble.
# If the csv exist before read it and return its data.
enzymes(save_csv = TRUE)

# save in database, save parsed tibble as csv if it does not exist
# in current location and return parsed tibble.
# If the csv exist before read it and return its data.
enzymes(save_table = TRUE, save_csv = TRUE, database_connection = sqlite_con)

# save parsed tibble as csv if it does not exist in given
# location and return parsed tibble.
# If the csv exist before read it and return its data.
enzymes(save_csv = TRUE, csv_path = TRUE)

# save parsed tibble as csv if it does not exist in current
# location and return parsed tibble.
# If the csv exist override it and return it.
enzymes(save_csv = TRUE, csv_path = TRUE, override = TRUE)
}
}
\seealso{
Other enzymes: 
\code{\link{enzymes_actions}()},
\code{\link{enzymes_articles}()},
\code{\link{enzymes_links}()},
\code{\link{enzymes_polypeptide_ext_ident}()},
\code{\link{enzymes_polypeptide_go}()},
\code{\link{enzymes_polypeptide_pfams}()},
\code{\link{enzymes_polypeptide_syn}()},
\code{\link{enzymes_polypeptide}()},
\code{\link{enzymes_textbooks}()}
}
\concept{enzymes}
